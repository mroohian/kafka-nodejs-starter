version: '2'

services:
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    # ports:
    #   - '2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend

  kafka-1:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9093:9093'
    volumes:
      - 'kafka_1_data:/bitnami'
    environment:
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-1:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - backend
    depends_on:
      - zookeeper

  kafka-2:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9094:9094'
    volumes:
      - 'kafka_2_data:/bitnami'
    environment:
      - KAFKA_BROKER_ID=2
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-2:9092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - backend
    depends_on:
      - zookeeper

  kafka-3:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9095:9095'
    volumes:
      - 'kafka_3_data:/bitnami'
    environment:
      - KAFKA_BROKER_ID=3
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-3:9092,EXTERNAL://localhost:9095
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - backend
    depends_on:
      - zookeeper

  debug:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    command: sleep infinity
    volumes:
      - 'kafka_1_data:/kafka_1_data'
      - 'kafka_2_data:/kafka_2_data'
      - 'kafka_3_data:/kafka_3_data'
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_1_data:
    driver: local
  kafka_2_data:
    driver: local
  kafka_3_data:
    driver: local
